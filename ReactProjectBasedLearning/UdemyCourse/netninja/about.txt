The general layout-of the land 

Node-modules : react library itself is a node package 
Public: put any files that would be made public to the browser 
favicon: 
robots.txt: crawlers find this file 
We have a single html file here 
If we have a single page application we only get a single page application served back to the browser 
Root is the place where react app will be injected to the page 


Soruce folder : Uncompiled react-source code will go 
99% of stuffs are done inside the source folder 

Any react content or component are going to go inside a source folder 

App.js :- This is a react component file 
Each component will have its own file ( React components are just functions )


App.css:- This is being used to style app.js compoentnt 

Index.css-: is used to style the entire page 


App.test.js : writing test for app components 

setupTest.js: test files 

reportwebvitals: performance of react files 


Index.js: kickstart our application 


----------------------------------------------------------------------------------------------------


State and Why we need It?
* States are component data which may change over time 
* We might have a todolist on a webpage 

* If we were to add a new to-do in a todolist 
* If we were to delete a todo 
* In this example the to-do data inside the component is called as todo-state 
* A dropdown content box on a webpage could be a react component 
* State might not be that obvious 
* We toggle when to hide and when to show it 
* Toggling between true or false 
* state= isOpen( true or false) 
* can we use variables 

----------------------------------------------------------------------------------------

a Simple react functional component that looks like this 


const App=() =>{
    return (
        <div className="app"> Hello, Chad!</div>


    )
}


is actually changed into javascript like this 
 this is called the virtual dom 

React.createElement(
    'div'
    {class: 'app'},
    "Hello Chad!"
)